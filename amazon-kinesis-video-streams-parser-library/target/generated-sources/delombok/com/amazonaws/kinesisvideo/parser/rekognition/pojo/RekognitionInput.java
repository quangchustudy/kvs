// Generated by delombok at Thu Sep 21 09:23:35 ICT 2023
/*
Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License"). 
You may not use this file except in compliance with the License. 
A copy of the License is located at

   http://aws.amazon.com/apache2.0/

or in the "license" file accompanying this file. 
This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under the License.
*/
package com.amazonaws.kinesisvideo.parser.rekognition.pojo;

/**
 * Input for Rekognition stream processor.
 */
public final class RekognitionInput {
    private final String kinesisVideoStreamArn;
    private final String kinesisDataStreamArn;
    private final String iamRoleArn;
    private final String faceCollectionId;
    private final String streamingProcessorName;
    private final Float matchThreshold;

    @SuppressWarnings("all")
    RekognitionInput(final String kinesisVideoStreamArn, final String kinesisDataStreamArn, final String iamRoleArn, final String faceCollectionId, final String streamingProcessorName, final Float matchThreshold) {
        this.kinesisVideoStreamArn = kinesisVideoStreamArn;
        this.kinesisDataStreamArn = kinesisDataStreamArn;
        this.iamRoleArn = iamRoleArn;
        this.faceCollectionId = faceCollectionId;
        this.streamingProcessorName = streamingProcessorName;
        this.matchThreshold = matchThreshold;
    }


    @SuppressWarnings("all")
    public static class RekognitionInputBuilder {
        @SuppressWarnings("all")
        private String kinesisVideoStreamArn;
        @SuppressWarnings("all")
        private String kinesisDataStreamArn;
        @SuppressWarnings("all")
        private String iamRoleArn;
        @SuppressWarnings("all")
        private String faceCollectionId;
        @SuppressWarnings("all")
        private String streamingProcessorName;
        @SuppressWarnings("all")
        private Float matchThreshold;

        @SuppressWarnings("all")
        RekognitionInputBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder kinesisVideoStreamArn(final String kinesisVideoStreamArn) {
            this.kinesisVideoStreamArn = kinesisVideoStreamArn;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder kinesisDataStreamArn(final String kinesisDataStreamArn) {
            this.kinesisDataStreamArn = kinesisDataStreamArn;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder iamRoleArn(final String iamRoleArn) {
            this.iamRoleArn = iamRoleArn;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder faceCollectionId(final String faceCollectionId) {
            this.faceCollectionId = faceCollectionId;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder streamingProcessorName(final String streamingProcessorName) {
            this.streamingProcessorName = streamingProcessorName;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @SuppressWarnings("all")
        public RekognitionInput.RekognitionInputBuilder matchThreshold(final Float matchThreshold) {
            this.matchThreshold = matchThreshold;
            return this;
        }

        @SuppressWarnings("all")
        public RekognitionInput build() {
            return new RekognitionInput(this.kinesisVideoStreamArn, this.kinesisDataStreamArn, this.iamRoleArn, this.faceCollectionId, this.streamingProcessorName, this.matchThreshold);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "RekognitionInput.RekognitionInputBuilder(kinesisVideoStreamArn=" + this.kinesisVideoStreamArn + ", kinesisDataStreamArn=" + this.kinesisDataStreamArn + ", iamRoleArn=" + this.iamRoleArn + ", faceCollectionId=" + this.faceCollectionId + ", streamingProcessorName=" + this.streamingProcessorName + ", matchThreshold=" + this.matchThreshold + ")";
        }
    }

    @SuppressWarnings("all")
    public static RekognitionInput.RekognitionInputBuilder builder() {
        return new RekognitionInput.RekognitionInputBuilder();
    }

    @SuppressWarnings("all")
    public String getKinesisVideoStreamArn() {
        return this.kinesisVideoStreamArn;
    }

    @SuppressWarnings("all")
    public String getKinesisDataStreamArn() {
        return this.kinesisDataStreamArn;
    }

    @SuppressWarnings("all")
    public String getIamRoleArn() {
        return this.iamRoleArn;
    }

    @SuppressWarnings("all")
    public String getFaceCollectionId() {
        return this.faceCollectionId;
    }

    @SuppressWarnings("all")
    public String getStreamingProcessorName() {
        return this.streamingProcessorName;
    }

    @SuppressWarnings("all")
    public Float getMatchThreshold() {
        return this.matchThreshold;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof RekognitionInput)) return false;
        final RekognitionInput other = (RekognitionInput) o;
        final Object this$matchThreshold = this.getMatchThreshold();
        final Object other$matchThreshold = other.getMatchThreshold();
        if (this$matchThreshold == null ? other$matchThreshold != null : !this$matchThreshold.equals(other$matchThreshold)) return false;
        final Object this$kinesisVideoStreamArn = this.getKinesisVideoStreamArn();
        final Object other$kinesisVideoStreamArn = other.getKinesisVideoStreamArn();
        if (this$kinesisVideoStreamArn == null ? other$kinesisVideoStreamArn != null : !this$kinesisVideoStreamArn.equals(other$kinesisVideoStreamArn)) return false;
        final Object this$kinesisDataStreamArn = this.getKinesisDataStreamArn();
        final Object other$kinesisDataStreamArn = other.getKinesisDataStreamArn();
        if (this$kinesisDataStreamArn == null ? other$kinesisDataStreamArn != null : !this$kinesisDataStreamArn.equals(other$kinesisDataStreamArn)) return false;
        final Object this$iamRoleArn = this.getIamRoleArn();
        final Object other$iamRoleArn = other.getIamRoleArn();
        if (this$iamRoleArn == null ? other$iamRoleArn != null : !this$iamRoleArn.equals(other$iamRoleArn)) return false;
        final Object this$faceCollectionId = this.getFaceCollectionId();
        final Object other$faceCollectionId = other.getFaceCollectionId();
        if (this$faceCollectionId == null ? other$faceCollectionId != null : !this$faceCollectionId.equals(other$faceCollectionId)) return false;
        final Object this$streamingProcessorName = this.getStreamingProcessorName();
        final Object other$streamingProcessorName = other.getStreamingProcessorName();
        if (this$streamingProcessorName == null ? other$streamingProcessorName != null : !this$streamingProcessorName.equals(other$streamingProcessorName)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $matchThreshold = this.getMatchThreshold();
        result = result * PRIME + ($matchThreshold == null ? 43 : $matchThreshold.hashCode());
        final Object $kinesisVideoStreamArn = this.getKinesisVideoStreamArn();
        result = result * PRIME + ($kinesisVideoStreamArn == null ? 43 : $kinesisVideoStreamArn.hashCode());
        final Object $kinesisDataStreamArn = this.getKinesisDataStreamArn();
        result = result * PRIME + ($kinesisDataStreamArn == null ? 43 : $kinesisDataStreamArn.hashCode());
        final Object $iamRoleArn = this.getIamRoleArn();
        result = result * PRIME + ($iamRoleArn == null ? 43 : $iamRoleArn.hashCode());
        final Object $faceCollectionId = this.getFaceCollectionId();
        result = result * PRIME + ($faceCollectionId == null ? 43 : $faceCollectionId.hashCode());
        final Object $streamingProcessorName = this.getStreamingProcessorName();
        result = result * PRIME + ($streamingProcessorName == null ? 43 : $streamingProcessorName.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "RekognitionInput(kinesisVideoStreamArn=" + this.getKinesisVideoStreamArn() + ", kinesisDataStreamArn=" + this.getKinesisDataStreamArn() + ", iamRoleArn=" + this.getIamRoleArn() + ", faceCollectionId=" + this.getFaceCollectionId() + ", streamingProcessorName=" + this.getStreamingProcessorName() + ", matchThreshold=" + this.getMatchThreshold() + ")";
    }
}
